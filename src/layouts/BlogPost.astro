---
import type { CollectionEntry } from 'astro:content'
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Footer from '../components/Footer.astro'
import PostHeader from '../components/PostHeader'
import Gtm from '../components/gtm.astro'
import AdSense from '../components/adsense.astro'
import '../styles/highlight.css'

type Props = CollectionEntry<'blog'>['data']

const {
  title,
  description,
  publishedDate,
  featureImage,
  primaryTag = { name: 'JavaScript', slug: 'javascript' },
} = Astro.props
// console.log({ primaryTag })

const primaryAuthor = { name: 'John Serrano' }
---

<html lang='es'>
  <head>
    <Gtm />
    <BaseHead
      title={`${title} | John Serrano`}
      description={description}
      image={featureImage}
      datePublished={publishedDate}
    />
    <AdSense />
  </head>

  <body>
    <Header />
    <main>
      <article>
        <PostHeader
          title={title}
          published_at={publishedDate}
          primary_author={primaryAuthor}
          primary_tag={primaryTag}
        />
        <slot />
      </article>
    </main>
    <Footer />
  </body>
</html>

<script>
  const domain = window.location.origin
  const queryString = window.location.search

  const urlParams = new URLSearchParams(queryString)

  function enviarDatosEvento() {
    let creationTime: number | string | null = localStorage.getItem('_fbp_creation_time')
    let creationTimeFbc: number | string | null = localStorage.getItem('_fbc_creation_time')

    const randomNumber = new Date().getTime() + Math.floor(Math.random() * 1000)
    const fbclid = urlParams.get('fbclid')
    const hasFbclid = urlParams.has('fbclid')

    if (!creationTime) {
      creationTime = new Date().getTime()
      localStorage.setItem('_fbp_creation_time', creationTime?.toString())
    }

    if (hasFbclid && !creationTimeFbc) {
      creationTimeFbc = new Date().getTime()
      localStorage.setItem('_fbc_creation_time', creationTimeFbc?.toString())
    }

    const data = {
      event_name: 'PageView',
      event_id: 'page_view_id',
      event_source_url: window.location.href,
      fbp: `fb.1.${creationTime}.${randomNumber}`,
      ...(hasFbclid ? { fbc: `fb.1.${creationTimeFbc}.${fbclid}` } : {}),
    }

    fetch(`${domain}/api/view-content-fb.json`, {
      method: 'POST',
      body: JSON.stringify(data),
    })
      .then(response => {
        if (!response.ok) {
          throw new Error('Error en la solicitud')
        }
        return response.json()
      })
      .then(data => {
        console.log('Respuesta:', data)
      })
      .catch(error => {
        console.error('Error:', error)
      })
  }

  // Llama a la función para enviar datos de evento cuando se cargue una página
  window.addEventListener('load', enviarDatosEvento)
</script>
