---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css'
import { openGraph, twitter } from '../consts'

export interface Props {
  title: string
  description: string
  image?: string
  datePublished?: Date
  dateModified?: Date
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)
const {
  title,
  description,
  image = '/default.png',
  datePublished = '2015-09-15T15:49:50-05:00',
  dateModified = '',
} = Astro.props
---

<!-- Global Metadata -->
<meta charset='utf-8' />
<!-- <meta name="viewport" content="width=device-width,initial-scale=1" /> -->
<meta name='viewport' content='width=device-width, initial-scale=1,minimum-scale=1, maximum-scale=5' />
<link rel='icon' type='image/png' href='/favicon/favicon-32x32.png' />
<link rel='apple-touch-icon' sizes='180x180' href='/favicon/apple-touch-icon.png' />
<link rel='icon' type='image/png' sizes='32x32' href='/favicon/favicon-32x32.png' />
<link rel='icon' type='image/png' sizes='16x16' href='/favicon/favicon-16x16.png' />
<link rel='manifest' href='/manifest.json' />
<link rel='mask-icon' href='/favicon/safari-pinned-tab.svg' color='#5bbad5' />
<meta name='msapplication-TileColor' content='#da532c' />
<meta name='theme-color' content='#ffffff' />

<meta name='generator' content={Astro.generator} />

<link rel='sitemap' href='/sitemap-index.xml' />

<!-- Canonical URL -->
<link rel='canonical' href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{title || 'John Serrano'}</title>
<meta name='title' content={title} />
<meta name='description' content={description} />
<meta name='author' content='John Serrano' />

<!-- Open Graph / Facebook -->
<meta property='og:type' content='website' />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={title || openGraph.title} />
<meta property='og:description' content={description || openGraph.description} />
<meta property='og:image' content={new URL(image, Astro.url)} />
<meta property='fb:pages' content='323137824476732' />
<meta property='og:locale:alternate' content='es_LA' />

<!-- Twitter -->
<meta property='twitter:card' content={twitter.cardType} />
<meta property='twitter:site' name='twitter:site' content={twitter.handle} />
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
<meta property='twitter:image' content={new URL(image, Astro.url)} />

<script
  type='application/ld+json'
  set:html={JSON.stringify({
    '@context': 'http://schema.org',
    '@type': 'BlogPosting',
    mainEntityOfPage: {
      '@type': 'WebPage',
      '@id': Astro.url,
    },
    headline: title,
    image: [new URL(image, Astro.url)],
    datePublished: datePublished,
    dateModified: dateModified,
    author: {
      '@type': 'Person',
      name: 'John Serrano',
    },
    publisher: {
      '@type': 'Organization',
      name: 'John Serrano',
      logo: {
        '@type': 'ImageObject',
        url: 'https://johnserrano.co/default.jpg',
      },
    },
    description: description,
  })}
></script>

<!-- Google Tag Manager -->
<script type='text/partytown'>
  ;(function (w, d, s, l, i) {
    w[l] = w[l] || []
    w[l].push({ 'gtm.start': new Date().getTime(), event: 'gtm.js' })
    var f = d.getElementsByTagName(s)[0],
      j = d.createElement(s),
      dl = l != 'dataLayer' ? '&l=' + l : ''
    j.async = true
    j.src = 'https://www.googletagmanager.com/gtm.js?id=' + i + dl
    f.parentNode.insertBefore(j, f)
  })(window, document, 'script', 'dataLayer', 'GTM-MKJQTJ3')
</script>
<!-- End Google Tag Manager -->

<script>
  partytown = {
    forward: ['dataLayer.push'],
    resolveUrl: url => {
      const siteUrl = 'https://johnserrano.co/proxytown'

      if (url.hostname === 'www.googletagmanager.com') {
        const proxyUrl = new URL(`${siteUrl}/gtm`)

        const gtmId = new URL(url).searchParams.get('id')
        gtmId && proxyUrl.searchParams.append('id', gtmId)

        return proxyUrl
      } else if (url.hostname === 'www.google-analytics.com') {
        const proxyUrl = new URL(`${siteUrl}/ga`)

        return proxyUrl
      }

      return url
    },
  }
</script>

<!-- <script
  async
  src='https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3083367533294626'
  crossorigin='anonymous'
></script> -->
