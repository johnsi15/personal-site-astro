---
import { skills } from '@/helpers/conts'

const rows: string[][] = [[], [], [], []]
skills.forEach((skill, i) => rows[i % 4].push(skill))
---

<section class='skills-marquee'>
  <h6>Tecnologías y Herramientas</h6>
  <div class='marquee-rows'>
    {
      rows.map((row, idx) => (
        <div class={`marquee-row ${idx % 2 === 0 ? 'to-right' : 'to-left'}`}>
          <ul>
            {row.concat(row).map(skill => (
              <li class='skill'>
                <span>{skill}</span>
              </li>
            ))}
          </ul>
        </div>
      ))
    }
  </div>
</section>

<style>
  .skills-marquee {
    margin: 100px auto;
    position: relative;
    overflow: hidden;
    padding: 0;
    max-width: 650px;
  }
  .skills-marquee::before,
  .skills-marquee::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: 100px;
    z-index: 2;
    pointer-events: none;
  }
  .skills-marquee::before {
    left: 0;
    background: linear-gradient(
      90deg,
      var(--dark-color) 0%,
      var(--dark-color) 20%,
      rgba(0, 8, 20, 0.9) 40%,
      rgba(0, 8, 20, 0.6) 60%,
      rgba(0, 8, 20, 0.3) 80%,
      transparent 100%
    );
  }
  .skills-marquee::after {
    right: 0;
    background: linear-gradient(
      -90deg,
      var(--dark-color) 0%,
      var(--dark-color) 20%,
      rgba(0, 8, 20, 0.9) 40%,
      rgba(0, 8, 20, 0.6) 60%,
      rgba(0, 8, 20, 0.3) 80%,
      transparent 100%
    );
  }
  .skills-marquee h6 {
    font-size: var(--font-size-large);
    color: var(--color-white);
    line-height: 2.3rem;
    margin: 0 0 40px 0;
    text-align: center;
    font-weight: 700;
  }
  .marquee-rows {
    display: flex;
    flex-direction: column;
    gap: 18px;
    position: relative;
    z-index: 1;
  }
  .marquee-row {
    overflow: hidden;
    position: relative;
    width: 100%;
  }
  .marquee-row ul {
    display: flex;
    gap: 20px;
    list-style: none;
    margin: 0;
    padding: 0;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    animation-play-state: running;
    width: max-content;
    min-width: 100%;
    --marquee-width: 0px;
  }
  .marquee-row.to-right ul {
    animation-name: marquee-right;
    animation-duration: 70s;
    animation-delay: 0s;
    animation-timing-function: linear;
    animation-fill-mode: both;
    animation-play-state: running;
    animation-iteration-count: infinite;
  }
  .marquee-row.to-left ul {
    animation-name: marquee-left;
    animation-duration: 70s;
    animation-delay: 0s;
    animation-timing-function: linear;
    animation-fill-mode: both;
    animation-play-state: running;
    animation-iteration-count: infinite;
  }
  .marquee-row:hover ul {
    animation-play-state: paused;
  }
  .skill {
    padding: 8px 30px;
    border-radius: 5px;
    background: transparent;
    border: 1px solid var(--color-blue-500);
    color: var(--color-blue-500);
    font-size: var(--font-size-medium-small);
    transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);
    white-space: nowrap;
    user-select: none;
    flex-shrink: 0;
  }
  .skill:hover {
    color: var(--color-blue);
    background-color: var(--color-blue-500);
  }

  @keyframes marquee-right {
    0% {
      transform: translateX(calc(-1 * var(--marquee-width)));
    }
    100% {
      transform: translateX(0);
    }
  }
  @keyframes marquee-left {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(calc(-1 * var(--marquee-width)));
    }
  }
  .marquee-row:hover ul {
    animation-play-state: paused;
  }
  @media screen and (max-width: 768px) {
    .skills-marquee {
      margin: 55px auto;
    }
    .skills-marquee::before,
    .skills-marquee::after {
      width: 60px;
    }
  }
</style>

<script>
  // Calcula el ancho real del ul y lo asigna como variable CSS para animación perfecta
  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.marquee-row ul').forEach(ul => {
      if (ul instanceof HTMLElement) {
        // El ancho de la mitad (porque está duplicado)
        const totalWidth = ul.scrollWidth / 2
        ul.style.setProperty('--marquee-width', `${totalWidth}px`)
      }
    })
  })
</script>
